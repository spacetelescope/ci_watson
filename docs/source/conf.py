#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# ci_watson documentation build configuration file, created by
# sphinx-quickstart on Tue Aug  7 16:43:10 2018.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

import subprocess
from datetime import datetime

from docutils import nodes
from sphinx.util.docutils import SphinxDirective

import ci_watson

# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = ['sphinx.ext.autodoc',
              'sphinx_automodapi.automodapi',
              'numpydoc',
              'sphinx.ext.intersphinx',
              'sphinx.ext.imgmath',
              'sphinx.ext.viewcode',
              "sphinx_design",
              "sphinx_copybutton"]
numpydoc_show_class_members = False

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = 'ci_watson'
copyright = f'{datetime.today().year}, STScI'
author = 'STScI'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The full version, including alpha/beta/rc tags.
release = ci_watson.__version__
# The short X.Y version.
version = '.'.join(release.split('.')[:2])
dev = "dev" in release

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = []

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = False

# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'pydata_sphinx_theme'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
html_theme_options = {
    "collapse_navigation": True,
    "icon_links": [],
    "navigation_depth": 2,
    "show_nav_level": 2,
    "use_edit_page_button": False,
    "github_url": "https://github.com/spacetelescope/ci_watson",
    "external_links": [
        {"name": "Help Desk", "url": "http://jwsthelp.stsci.edu/"},
    ],
    # https://github.com/pydata/pydata-sphinx-theme/issues/1492
    "navigation_with_keys": False,
}

html_context = {
    "default_mode": "light",
    "to_be_indexed": ["stable", "latest"],
    "is_development": dev,
    "github_user": "spacetelescope",
    "github_repo": "ci_watson",
    "github_version": "main",
    "doc_path": "docs",
}

# Hide primary sidebar
html_sidebars = {
  "**": []
}

html_copy_source = False

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']
html_css_files = ["ci_watson.css"]
html_logo = "_static/stsci_logo.png"

# Example configuration for intersphinx: refer to the Python standard library.
intersphinx_mapping = {'python': ('https://docs.python.org/', None)}

# Report broken ref as errors.
nitpicky = True

# -- Options for HTMLHelp output ------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'ci_watsondoc'


# -- Custom directive -------------------------------------------

class CIWatsonCLIHelpDirective(SphinxDirective):

    def run(self):
        help_text = subprocess.check_output(
            ["okify_regtests", "--help"], encoding="utf-8")
        paragraph_node = nodes.literal_block(text=help_text)
        return [paragraph_node]


def setup(app):
    app.add_directive('okifyregtestsclihelp', CIWatsonCLIHelpDirective)


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'ci_watson', 'ci_watson Documentation',
     [author], 1)
]
