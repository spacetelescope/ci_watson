// Obtain files from source control system.
// [skip ci] and [ci skip] have no effect here.
if (utils.scm_checkout(['skip_disable':true])) return

// Allow modification of the job configuration, affects all relevant build configs.
// Pass this object in the argument list to the`run()` function below to apply these settings to the job's execution.
jobconfig = new JobConfig()
jobconfig.post_test_summary = true

// Test that slow and bigdata tests are run in "stable" mode.
bc1 = new BuildConfig()
bc1.nodetype = "RHEL-6"
bc1.name = "stable"
bc1.env_vars = ['TEST_BIGDATA=https://bytesalad.stsci.edu/artifactory']
bc1.conda_channels = ['http://ssb.stsci.edu/astroconda']
bc1.conda_packages = ['python=3.7', 'pytest', 'requests', 'numpy', 'astropy']
bc1.build_cmds = ["pip install -e .[test,all]"]
bc1.test_cmds = ["pytest tests --slow --bigdata --env=stable --basetemp=tests_output --junitxml results.xml"]
bc1.failedUnstableThresh = 1
bc1.failedFailureThresh = 6

// Test that slow and bigdata tests are run in "dev" mode.
// Also test another version of Python.
bc2 = utils.copy(bc1)
bc2.name = "dev"
bc2.conda_packages = ['python=3.8', 'pytest', 'requests', 'numpy']
bc2.build_cmds = ["pip install -i https://pypi.anaconda.org/astropy/simple astropy --pre --no-deps",
                  "pip install -e .[test,all]"]
bc2.test_cmds = ["pytest tests --slow --bigdata --basetemp=tests_output --junitxml results.xml"]

// Iterate over configurations that define the (distributed) build matrix.
// Spawn a host of the given nodetype for each combination and run in parallel.
// Also apply the job configuration defined in `jobconfig` above.
utils.run([bc1, bc2, jobconfig])
